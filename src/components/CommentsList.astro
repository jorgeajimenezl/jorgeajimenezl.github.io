---
import CommentForm from "@components/CommentForm.astro";
import Comment from "@components/Comment.astro";

interface Props {
  postSlug: string;
}

// const { postSlug } = Astro.props as Props;

// TODO: Replace mocked comments with a real fetch to your API.
// Example:
// const comments = await fetch(`/api/comments?slug=${postSlug}`).then(r => r.json());
// For now, we mock 2 comments so layout and styles are set.
const comments = [
  {
    id: "c1",
    author: "Alex",
    date: new Date("2024-08-15T10:30:00Z"),
    content:
      "Really enjoyed this post! The section on performance tips was super helpful.",
  },
  {
    id: "c2",
    author: "Samira",
    date: new Date("2024-09-02T18:45:00Z"),
    content:
      "Thanks for sharing. I'd love a follow-up with code samples for the build step.",
  },
];
---

<!-- <div class="separator my-12 border-t border-black/10 dark:border-white/10"></div> -->

<div class="my-12 border-t border-black/10 dark:border-white/10"></div>
<section aria-labelledby="comments-title" class="mt-8">
  <h2 id="comments-title" class="text-xl font-semibold text-black dark:text-white mb-4">
    Comments
  </h2>

  {comments.length === 0 ? (
    <p class="text-sm text-black/60 dark:text-white/60">
      No comments yet.
    </p>
  ) : (
    <ul class="space-y-6">
      {comments.map((c) => (
        <Comment id={c.id} author={c.author} date={c.date} content={c.content} />
      ))}
    </ul>
  )}

  <CommentForm />
</section>
